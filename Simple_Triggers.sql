DROP TRIGGER INSERT_BILL;
DROP TRIGGER INSERT_WORK_LOG;
DROP TRIGGER INSERT_ASSIGNMENT;
DROP TRIGGER INSERT_PROJECT_SCHEDULE;
DROP TRIGGER INSERT_EMPLOYEE_SKILL;
DROP TRIGGER INSERT_TASK;
DROP TRIGGER INSERT_SKILL_COLLECTION;
DROP TRIGGER INSERT_PROJECT;
DROP TRIGGER INSERT_MANAGER;
DROP TRIGGER INSERT_CUSTOMER;
DROP TRIGGER INSERT_EMPLOYEE;
DROP TRIGGER INSERT_REGION;
DROP TRIGGER UPDATE_BILL;
DROP TRIGGER UPDATE_WORK_LOG;
DROP TRIGGER UPDATE_ASSIGNMENT;
DROP TRIGGER UPDATE_PROJECT_SCHEDULE;
DROP TRIGGER UPDATE_EMPLOYEE_SKILL;
DROP TRIGGER UPDATE_TASK;
DROP TRIGGER UPDATE_SKILL_COLLECTION;
DROP TRIGGER UPDATE_PROJECT;
DROP TRIGGER UPDATE_MANAGER;
DROP TRIGGER UPDATE_CUSTOMER;
DROP TRIGGER UPDATE_EMPLOYEE;
DROP TRIGGER UPDATE_REGION;

CREATE TRIGGER INSERT_REGION
AFTER INSERT ON REGION
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been inserted on REGION table.');
END;
/

CREATE TRIGGER INSERT_EMPLOYEE
AFTER INSERT ON EMPLOYEE
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been inserted on EMPLOYEE table.');
END;
/

CREATE TRIGGER INSERT_CUSTOMER
AFTER INSERT ON CUSTOMER
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been inserted on CUSTOMER table.');
END;
/

CREATE TRIGGER INSERT_MANAGER
AFTER INSERT ON MANAGER
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been inserted on MANAGER table.');
END;
/

CREATE TRIGGER INSERT_PROJECT
AFTER INSERT ON PROJECT
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been inserted on PROJECT table.');
END;
/

CREATE TRIGGER INSERT_SKILL_COLLECTION
AFTER INSERT ON SKILL_COLLECTION
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been inserted on SKILL_COLLECTION table.');
END;
/

CREATE TRIGGER INSERT_TASK
AFTER INSERT ON TASK
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been inserted on TASK table.');
END;
/

CREATE TRIGGER INSERT_EMPLOYEE_SKILL
AFTER INSERT ON EMPLOYEE_SKILL
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been inserted on EMPLOYEE_SKILL table.');
END;
/

CREATE TRIGGER INSERT_PROJECT_SCHEDULE
AFTER INSERT ON PROJECT_SCHEDULE
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been inserted on PROJECT_SCHEDULE table.');
END;
/

CREATE TRIGGER INSERT_ASSIGNMENT
AFTER INSERT ON ASSIGNMENT
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been inserted on ASSIGNMENT table.');
END;
/

CREATE TRIGGER INSERT_WORK_LOG
AFTER INSERT ON WORK_LOG
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been inserted on WORK_LOG table.');
END;
/

CREATE TRIGGER INSERT_BILL
AFTER INSERT ON BILL
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been inserted on BILL table.');
END;
/

CREATE TRIGGER UPDATE_REGION
AFTER UPDATE ON REGION
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been updated on REGION table.');
END;
/

CREATE TRIGGER UPDATE_SKILL_COLLECTION
AFTER UPDATE ON SKILL_COLLECTION
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been updated on SKILL_COLLECTION table.');
END;
/

CREATE TRIGGER UPDATE_EMPLOYEE
AFTER UPDATE ON EMPLOYEE
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been updated on EMPLOYEE table.');
END;
/

CREATE TRIGGER UPDATE_EMPLOYEE_SKILL
AFTER UPDATE ON EMPLOYEE_SKILL
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been updated on EMPLOYEE_SKILL table.');
END;
/

CREATE TRIGGER UPDATE_CUSTOMER
AFTER UPDATE ON CUSTOMER
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been updated on CUSTOMER table.');
END;
/

CREATE TRIGGER UPDATE_MANAGER
AFTER UPDATE ON MANAGER
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been updated on MANAGER table.');
END;
/

CREATE TRIGGER UPDATE_PROJECT
AFTER UPDATE ON PROJECT
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been updated on PROJECT table.');
END;
/

CREATE TRIGGER UPDATE_TASK
AFTER UPDATE ON TASK
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been updated on TASK table.');
END;
/

CREATE TRIGGER UPDATE_PROJECT_SCHEDULE
AFTER UPDATE ON PROJECT_SCHEDULE
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been updated on PROJECT_SCHEDULE table.');
END;
/

CREATE TRIGGER UPDATE_ASSIGNMENT
AFTER UPDATE ON ASSIGNMENT
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been updated on ASSIGNMENT table.');
END;
/

CREATE TRIGGER UPDATE_WORK_LOG
AFTER UPDATE ON WORK_LOG
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been updated on WORK_LOG table.');
END;
/

CREATE TRIGGER UPDATE_BILL
AFTER UPDATE ON BILL
BEGIN
    DBMS_OUTPUT.PUT_LINE('A row has been updated on BILL table.');
END;
/